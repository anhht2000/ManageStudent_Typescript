{"version":3,"sources":["api/axiosClient.ts","api/citysApi.ts","component/Common/PrivateRoute.tsx","app/hooks.ts","features/auth/authSlice.ts","component/Common/Header.tsx","component/Common/SideBar.tsx","asset/images/loading-32.gif","component/Common/Loading.tsx","features/dashboard/components/StatisticsItem.tsx","features/dashboard/dashboardSlice.ts","features/dashboard/components/StudentTable.tsx","features/dashboard/components/BoxRanking.tsx","utils/student.ts","features/city/citySlice.ts","features/dashboard/index.tsx","component/FormField/InputsField.tsx","component/FormField/RidioFields.tsx","component/FormField/SelectField.tsx","features/student/pages/StudentForm.tsx","api/studentApi.ts","features/student/pages/AddStudent.tsx","features/student/StudentSlice.ts","features/student/components/RemoveDialog.tsx","features/student/components/SearchBox.tsx","features/student/components/SelectBox.tsx","features/student/components/SelectSort.tsx","features/student/components/StudentDataInTable.tsx","features/student/components/StudentTable.tsx","features/student/pages/ListStudent.tsx","features/student/index.tsx","component/Layout/Admin.tsx","features/auth/pages/LoginPage.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/auth/authSaga.ts","features/city/citySaga.ts","features/dashboard/dashboardSaga.ts","features/student/StudentSaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","data","citysApi","getAll","get","params","_page","_limit","PrivateRoute","props","Boolean","localStorage","getItem","to","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedin","logging","currentUser","undefined","authSlice","createSlice","name","reducers","login","state","action","loginSuccess","payload","loginFail","logout","actions","authSelector","auth","authReducer","reducer","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","positionMenu","Header","classes","dispatch","React","useState","anchorEl","setAnchorEl","open","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","paper","MenuItem","firebase","signOut","width","backgroundColor","palette","background","link","textDecoration","activeLink","display","SideBar","url","useRouteMatch","console","log","List","component","activeClassName","ListItem","button","ListItemIcon","Dashboard","ListItemText","primary","PeopleAlt","useStyle","top","left","right","bottom","card","justifyContent","alignItems","minHeight","image","Loading","Box","Card","CardContent","src","imgLoading","alt","borderRadius","padding","caption","fontSize","StatisticsItem","label","value","icon","textAlign","dashboardSlice","loading","statistics","maleCount","femaleCount","hightMarkCount","lowMarkCount","highestStudent","lowestStudent","rankingByCityList","actionFetchData","actionFetchDataSuccess","actionFetchDataFail","actionSetStatistics","actionSetHighestStudent","actionSeLowestStudentt","actionSetRankingByCityList","getLoading","dashboard","getStatistics","getHighestStudent","getLowestStudent","getRankingByCityList","dashboardReducer","table","StudentTable","studentList","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","student","index","scope","mark","roots","BoxRanking","children","mt","getNameCity","cityCode","listCity","NameCity","find","city","code","citySlice","list","actionFetchDataCity","actionFetchDataCitySuccess","actionFetchDataCityFail","getListCity","cityReducer","DashBoard","isLoading","ListHighestStudent","ListLowestStudent","ListCityId","ListCity","useEffect","overflow","Grid","container","item","xs","md","lg","cityId","ListStudent","InputsField","control","inputprops","useController","field","onBlur","onChange","ref","fieldState","invalid","TextField","size","fullWidth","inputRef","inputProps","helperText","message","RidioFields","options","FormControl","FormLabel","RadioGroup","opt","FormControlLabel","Radio","FormHelperText","formControl","margin","minWidth","selectEmpty","marginTop","SelectField","InputLabel","htmlFor","Select","native","schema","yup","shape","required","test","split","filter","x","length","age","positive","min","max","typeError","gender","oneOf","StudentForm","initialValues","onbubmit","newListCityToSelect","useForm","defaultValues","resolver","yupResolver","handleSubmit","isSubmitting","formState","onSubmit","Alert","severity","Button","type","CircularProgress","studentApi","getbyId","addStudent","post","updateStudent","patch","removeStudent","delete","AddStudent","studentId","useParams","setError","history","useHistory","setStudent","isEdit","handleStudentFormSubmit","a","push","toast","success","slice","style","StudentSlice","pagination","_totalRows","actionFetchListStudent","actionFetchListStudentSuccess","actionFetchListStudentFail","actionSetFilter","actionSetFilterDebounce","actionSetFilterDebounceSuccess","name_like","getListStudent","getFilter","getPagination","StudentReducer","RemoveDialog","currentStudent","handleAgree","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","SearchBox","onSearchChange","Input","e","endAdornment","InputAdornment","SelectBox","onCityChange","SelectSort","onSortChange","_sort","_order","columId","maxWidth","height","lineHeight","StudentDataInTable","handleClickOpen","handleEdit","toUpperCase","fontWeight","gridFilter","loadding","page","setPage","selectedStudent","setSelectedStudent","setOpen","Fab","target","newFilter","Pagination","count","Math","ceil","Student","path","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","box1","gridArea","box2","border","dark","box3","AdminLayout","box","LoginPage","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","unregisterAuthObserver","onAuthStateChanged","user","username","displayName","password","elevation","firebaseAuth","App","then","catch","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","status","increment","decrement","incrementByAmount","incrementSaga","incrementSagaSuccess","extraReducers","builder","addCase","pending","fulfilled","handleLogin","handleLogout","watchLoginFlow","authSaga","delay","setItem","put","removeItem","take","fork","call","fetchDataCity","citySaga","takeLatest","setStatistics","rankingByCity","fetchData","dashboardSaga","all","mark_gte","mark_lte","arrData","staticsData","citiesList","studentsList","arrStudentIncity","forEach","ArrStudentIncity","sort","b","EditData","fetchDataSearchDebounce","studentSaga","debounce","rootSaga","sagaMiddleware","creatSagaMiddleware","createBrowserHistory","rootReducer","combineReducers","router","connectRouter","counter","counterReducer","store","configureStore","middleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","concat","routerMiddleware","devTools","run","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.161b860b.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: \"http://js-post-api.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n//Khi gui request len,respone ve se qua cai nay\r\n// Add a request interceptor\r\naxiosClient.interceptors.request.use(\r\n  function (config: AxiosRequestConfig) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosClient.interceptors.response.use(\r\n  function (response: AxiosResponse<any>) {\r\n    return response.data; //nhan ve co data luon roi khoong can . data\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import { ListResponse, cities } from \"typeData\";\r\nimport axiosClient from \"./axiosClient\";\r\n\r\nconst citysApi = {\r\n  getAll: (): Promise<ListResponse<cities>> => {\r\n    //dinh nghia ham nay tra ve 1 promise se tra ve 1 mang cac cities\r\n    const url = \"/cities\";\r\n    return axiosClient.get(url, {\r\n      params: {\r\n        _page: 1,\r\n        _limit: 10,\r\n      },\r\n    });\r\n  },\r\n};\r\nexport default citysApi;\r\n","//tsrpf\r\nimport { AdminLayout } from \"component/Layout\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n\r\nexport function PrivateRoute(props: RouteProps): ReactElement {\r\n  //kiemt tra xem dang nhap chua, neu chua ve login\r\n  const isLogin = Boolean(localStorage.getItem(\"access_token\"));\r\n  if (!isLogin) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <>\r\n      <Route {...props} />\r\n    </>\r\n  );\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport User from \"typeData/user\";\r\n\r\nexport interface LoginPayload {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthState {\r\n  isLoggedin: boolean;\r\n  logging?: boolean;\r\n  currentUser?: User;\r\n}\r\nconst initialState: AuthState = {\r\n  isLoggedin: false,\r\n  logging: false,\r\n  currentUser: undefined,\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    login: (state, action: PayloadAction<LoginPayload>) => {\r\n      state.logging = true;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<User>) => {\r\n      state.isLoggedin = true;\r\n      state.logging = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n\r\n    loginFail: (state, action: PayloadAction<string>) => {\r\n      state.logging = false;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.isLoggedin = false;\r\n      state.currentUser = undefined;\r\n    },\r\n  },\r\n});\r\n\r\n//action\r\nexport const { login, loginSuccess, loginFail, logout } = authSlice.actions;\r\n//selector\r\nexport const authSelector = (state: any) => state.auth;\r\n//reducer\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import { Fade } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useAppDispatch } from \"app/hooks\";\r\nimport { logout } from \"features/auth/authSlice\";\r\nimport React from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    positionMenu: {\r\n      // top: \"46px !important\",\r\n      // right: \"36px !important\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogoutClick = () => {\r\n    firebase.auth().signOut();\r\n    dispatch(logout());\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton edge='start' className={classes.menuButton} color='inherit' aria-label='menu'>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Admin Manager\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label='account of current user'\r\n                aria-controls='menu-appbar'\r\n                aria-haspopup='true'\r\n                onClick={handleMenu}\r\n                color='inherit'\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id='menu-appbar'\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                classes={{ paper: classes.positionMenu }}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogoutClick}>Log out</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport { Dashboard, PeopleAlt } from \"@material-ui/icons\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    link: {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n    activeLink: {\r\n      display: \"block\",\r\n      backgroundColor: \"rgba(34,56,23,0.3)\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction ListItemLink(props: ListItemProps<\"a\", { button?: true }>) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nexport default function SideBar() {\r\n  const classes = useStyles();\r\n  const { url } = useRouteMatch();\r\n  console.log(url);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <NavLink\r\n          to={`${url}/dashboard`}\r\n          className={classes.link}\r\n          activeClassName={classes.activeLink}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Dashboard />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"DashBoard\" />\r\n          </ListItem>\r\n        </NavLink>\r\n        <NavLink\r\n          to={`${url}/student`}\r\n          className={classes.link}\r\n          activeClassName={classes.activeLink}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PeopleAlt />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Student\" />\r\n          </ListItem>\r\n        </NavLink>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading-32.c4bec487.gif\";","import { Box, Card, CardContent, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport imgLoading from \"../../asset/images/loading-32.gif\";\r\n\r\ninterface Props {}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.8)\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  image: {\r\n    width: \"100px\",\r\n  },\r\n}));\r\nexport const Loading = (props: Props) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Box className={classes.root} id=\"box_container\">\r\n      <Card className={classes.card} id=\"card_container\">\r\n        <CardContent id=\"card_content\">\r\n          <img src={`${imgLoading}`} alt=\"NO MATCH\" className={classes.image} />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { ComponentType, ReactElement } from \"react\";\r\n\r\ninterface StatisticsItemProps {\r\n  label: string;\r\n  value: number;\r\n  icon: ReactElement;\r\n}\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: `rgba(0, 0, 209, 0.2)`,\r\n    borderRadius: 4,\r\n    padding: theme.spacing(1, 2),\r\n    // color: \"white\",\r\n  },\r\n  caption: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\nexport const StatisticsItem = ({ label, value, icon }: StatisticsItemProps) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Box className={classes.root}>\r\n      {icon}\r\n      <Box textAlign=\"right\">\r\n        <Typography variant=\"h6\">{label}</Typography>\r\n        <Typography variant=\"caption\" className={classes.caption}>\r\n          {value}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { RootState } from \"./../../app/store\";\r\nimport { TypeAction } from \"@material-ui/core/styles/createPalette\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { students } from \"typeData\";\r\n\r\nexport interface dashboardStatistics {\r\n  maleCount: number;\r\n  femaleCount: number;\r\n  hightMarkCount: number;\r\n  lowMarkCount: number;\r\n}\r\n\r\nexport interface RankingByCity {\r\n  cityId: string;\r\n  ListStudent: Array<students>;\r\n}\r\n\r\nexport interface dashboardState {\r\n  loading: boolean;\r\n  statistics: dashboardStatistics; //thoongs ke\r\n  highestStudent: students[]; //so luong sinh vien diem cao nhat\r\n  lowestStudent: students[]; //so luong sinh vien diem cao nhat\r\n  rankingByCityList: RankingByCity[];\r\n}\r\n\r\nconst initialState: dashboardState = {\r\n  loading: false,\r\n  statistics: {\r\n    maleCount: 0,\r\n    femaleCount: 0,\r\n    hightMarkCount: 0,\r\n    lowMarkCount: 0,\r\n  },\r\n  highestStudent: [],\r\n  lowestStudent: [],\r\n  rankingByCityList: [],\r\n};\r\n\r\nconst dashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    //reducer fetch data\r\n    actionFetchData: (state) => {\r\n      state.loading = true;\r\n    },\r\n    actionFetchDataSuccess: (state) => {\r\n      state.loading = false;\r\n    },\r\n    actionFetchDataFail: (state) => {\r\n      state.loading = false;\r\n    },\r\n    //reducer set data\r\n    actionSetStatistics: (\r\n      state,\r\n      action: PayloadAction<dashboardStatistics>\r\n    ) => {\r\n      state.statistics = action.payload;\r\n    },\r\n    actionSetHighestStudent: (state, action: PayloadAction<students[]>) => {\r\n      state.highestStudent = action.payload;\r\n    },\r\n    actionSeLowestStudentt: (state, action: PayloadAction<students[]>) => {\r\n      state.lowestStudent = action.payload;\r\n    },\r\n    actionSetRankingByCityList: (\r\n      state,\r\n      action: PayloadAction<RankingByCity[]>\r\n    ) => {\r\n      state.rankingByCityList = action.payload;\r\n    },\r\n  },\r\n});\r\n//action\r\nexport const {\r\n  actionFetchData,\r\n  actionFetchDataSuccess,\r\n  actionFetchDataFail,\r\n  actionSetStatistics,\r\n  actionSetHighestStudent,\r\n  actionSeLowestStudentt,\r\n  actionSetRankingByCityList,\r\n} = dashboardSlice.actions;\r\n//selector\r\n\r\nexport const getLoading = (state: RootState) => state.dashboard.loading;\r\nexport const getStatistics = (state: RootState) => state.dashboard.statistics;\r\nexport const getHighestStudent = (state: RootState) =>\r\n  state.dashboard.highestStudent;\r\nexport const getLowestStudent = (state: RootState) =>\r\n  state.dashboard.lowestStudent;\r\nexport const getRankingByCityList = (state: RootState) =>\r\n  state.dashboard.rankingByCityList;\r\n//reducer\r\nconst dashboardReducer = dashboardSlice.reducer;\r\nexport default dashboardReducer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { students } from \"typeData\";\r\n\r\nexport interface StudentTableProps {\r\n  studentList: students[];\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n});\r\n\r\nexport default function StudentTable({ studentList }: StudentTableProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell># </TableCell>\r\n            <TableCell align=\"right\">Name</TableCell>\r\n            <TableCell align=\"right\">Mark&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {studentList.map((student, index) => (\r\n            <TableRow key={student.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {index + 1}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{student.name}</TableCell>\r\n              <TableCell align=\"right\">{student.mark}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ninterface BoxRankingProps {\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  roots: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\nexport default function BoxRanking({ title, children }: BoxRankingProps): ReactElement {\r\n  const classes = useStyle();\r\n  return (\r\n    <Paper variant='outlined' className={classes.roots}>\r\n      <Typography variant='h6'>{title}</Typography>\r\n      <Box mt={1}>{children}</Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import { cities } from \"typeData\";\r\n\r\nexport function getColorMark(mark: number): string {\r\n  if (mark >= 8) return \"green\";\r\n  if (mark >= 5) return \"orange\";\r\n  else return \"red\";\r\n}\r\nexport function getNameCity(cityCode: string, listCity: cities[]): string {\r\n  const NameCity = listCity.find((city) => {\r\n    return cityCode === city.code;\r\n  });\r\n  return NameCity?.name || \"Không xác định\";\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { cities, ListResponse } from \"typeData\";\r\nimport { RootState } from \"./../../app/store\";\r\n\r\ninterface cityState {\r\n  loading: boolean;\r\n  list: cities[];\r\n}\r\nconst initialState: cityState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\nconst citySlice = createSlice({\r\n  name: \"city\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    actionFetchDataCity(state) {\r\n      state.loading = true;\r\n    },\r\n    actionFetchDataCitySuccess(state, action: PayloadAction<ListResponse<cities>>) {\r\n      state.loading = false;\r\n      state.list = action.payload.data;\r\n    },\r\n    actionFetchDataCityFail(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n//acitons\r\nexport const { actionFetchDataCity, actionFetchDataCitySuccess, actionFetchDataCityFail } =\r\n  citySlice.actions;\r\n//selector\r\nexport const getLoadingCity = (state: RootState) => state.city.loading;\r\nexport const getListCity = (state: RootState) => state.city.list;\r\n//reducer\r\nconst cityReducer = citySlice.reducer;\r\nexport default cityReducer;\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\r\nimport { Loading } from \"component/Common/Loading\";\r\nimport React, { ReactElement, useEffect } from \"react\";\r\nimport { StatisticsItem } from \"./components/StatisticsItem\";\r\nimport {\r\n  actionFetchData,\r\n  getHighestStudent,\r\n  getLoading,\r\n  getLowestStudent,\r\n  getRankingByCityList,\r\n  getStatistics,\r\n} from \"./dashboardSlice\";\r\nimport PregnantWomanIcon from \"@material-ui/icons/PregnantWoman\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport StudentTable from \"./components/StudentTable\";\r\nimport BoxRanking from \"./components/BoxRanking\";\r\nimport { getNameCity } from \"utils\";\r\nimport { actionFetchDataCity, getListCity } from \"features/city/citySlice\";\r\n\r\ninterface DashBoardProps {}\r\n\r\nexport default function DashBoard({}: DashBoardProps): ReactElement {\r\n  const dispatch = useAppDispatch();\r\n  const { maleCount, femaleCount, hightMarkCount, lowMarkCount } = useAppSelector(getStatistics);\r\n  const isLoading = useAppSelector(getLoading);\r\n  const ListHighestStudent = useAppSelector(getHighestStudent);\r\n  const ListLowestStudent = useAppSelector(getLowestStudent);\r\n  const ListCityId = useAppSelector(getRankingByCityList);\r\n  const ListCity = useAppSelector(getListCity);\r\n\r\n  //\r\n  useEffect(() => {\r\n    dispatch(actionFetchData());\r\n    dispatch(actionFetchDataCity()); //lay du lieu thanh pho\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      {/* statistics  */}\r\n      <Box overflow='hidden'>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={6} lg={3}>\r\n            <StatisticsItem\r\n              value={maleCount}\r\n              label='Male Count'\r\n              icon={<PregnantWomanIcon fontSize='large' />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={3}>\r\n            <StatisticsItem\r\n              value={femaleCount}\r\n              label='Female Count'\r\n              icon={<AccessibilityIcon fontSize='large' />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={3}>\r\n            <StatisticsItem\r\n              value={hightMarkCount}\r\n              label='Mark Up'\r\n              icon={<ThumbUpAltIcon fontSize='large' />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={3}>\r\n            <StatisticsItem\r\n              value={lowMarkCount}\r\n              label=' Mark Down'\r\n              icon={<ThumbDownIcon fontSize='large' />}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {/* heghest mark */}\r\n      <Box mt={3} overflow='hidden'>\r\n        <Typography variant='h5'>Top 5 Ranking</Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <BoxRanking title={\"Top 5 Highest\"}>\r\n              <StudentTable studentList={ListHighestStudent} />\r\n            </BoxRanking>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <BoxRanking title={\"Top 5 Lowest\"}>\r\n              {\" \"}\r\n              <StudentTable studentList={ListLowestStudent} />\r\n            </BoxRanking>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {/* highest in city */}\r\n      <Box mt={3} overflow='hidden'>\r\n        <Typography variant='h5'>Top 5 Student in City</Typography>\r\n        <Grid container spacing={2}>\r\n          {ListCityId.map((city) => {\r\n            return (\r\n              <Grid item xs={12} md={6} lg={6} key={city.cityId}>\r\n                <BoxRanking title={getNameCity(city.cityId, ListCity)}>\r\n                  {\" \"}\r\n                  <StudentTable studentList={city.ListStudent} />\r\n                </BoxRanking>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Box, TextField } from \"@material-ui/core\";\r\nimport React, { InputHTMLAttributes } from \"react\";\r\nimport { Control, useController } from \"react-hook-form\";\r\n\r\ninterface InputsFieldProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  name: string;\r\n  control: Control<any>;\r\n}\r\n\r\nexport const InputsField = ({ name, control, label, ...inputprops }: InputsFieldProps) => {\r\n  const {\r\n    field: { value, onBlur, onChange, ref },\r\n    fieldState: { invalid, error },\r\n  } = useController({ name, control });\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <TextField\r\n        size='small'\r\n        fullWidth\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        label={label}\r\n        variant='outlined'\r\n        error={invalid}\r\n        inputRef={ref}\r\n        inputProps={inputprops}\r\n        helperText={error?.message}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  RadioProps,\r\n} from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\nimport { Control } from \"react-hook-form\";\r\n\r\ninterface RidioFieldsProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  options: Array<{ value: string; label: string }>;\r\n}\r\n\r\nexport default function RidioFields({\r\n  name,\r\n  control,\r\n  label,\r\n  options,\r\n}: RidioFieldsProps): ReactElement {\r\n  const {\r\n    field: { value, onChange, onBlur },\r\n    fieldState: { invalid, error },\r\n  } = useController({ name, control });\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <FormControl component='fieldset' onBlur={onBlur}>\r\n        <FormLabel component='legend'>{label}</FormLabel>\r\n        <RadioGroup aria-label='gender' value={value} onChange={onChange}>\r\n          {options.map((opt) => (\r\n            <FormControlLabel value={opt.value} label={opt.label} control={<Radio />} />\r\n          ))}\r\n        </RadioGroup>\r\n        <FormHelperText>{error}</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  createStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  Select,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { Control, useController } from \"react-hook-form\";\r\n\r\ninterface SelectFieldProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  options: Array<{ value: string; label: string }>;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\nexport default function SelectField({\r\n  name,\r\n  control,\r\n  label,\r\n  options,\r\n}: SelectFieldProps): ReactElement {\r\n  const classes = useStyles();\r\n  const {\r\n    field: { value, onChange, onBlur },\r\n    fieldState: { invalid, error },\r\n  } = useController({ name, control });\r\n  return (\r\n    <FormControl className={classes.formControl} fullWidth>\r\n      <InputLabel htmlFor={`${name}-select`}>{label}</InputLabel>\r\n      <Select native value={value} onChange={onChange} onBlur={onBlur} id={`${name}-select`}>\r\n        <option aria-label='None' value='' />\r\n        {options.map((opt) => (\r\n          <option value={opt.value}>{opt.label}</option>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { Box, Button, CircularProgress, FormControl } from \"@material-ui/core\";\r\nimport { useAppSelector } from \"app/hooks\";\r\nimport { InputsField } from \"component/FormField/InputsField\";\r\nimport RidioFields from \"component/FormField/RidioFields\";\r\nimport SelectField from \"component/FormField/SelectField\";\r\nimport { getListCity } from \"features/city/citySlice\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { students } from \"typeData\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\ninterface StudentFormProps {\r\n  initialValues?: students;\r\n  error: string;\r\n  onbubmit: (formValue: students) => void;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Please enter your name\")\r\n    .test(\"two-words\", \"Please enter 2 word\", (value) => {\r\n      if (!value) return true;\r\n      const part = value.split(\" \");\r\n      return part.filter((x) => Boolean(x)).length >= 2;\r\n    }),\r\n  age: yup\r\n    .number()\r\n    .positive(\"Please enter positive number\")\r\n    .min(18, \"Min is 18\")\r\n    .max(60, \"Max is 60\")\r\n    .required(\"Please enter your age\")\r\n    .typeError(\"Please enter number\"),\r\n\r\n  mark: yup\r\n    .number()\r\n    .positive(\"Please enter positive number\")\r\n    .min(0, \"Min is 0\")\r\n    .max(10, \"Max is 10\")\r\n    .required(\"Please enter your mark\")\r\n    .typeError(\"Please enter number\"),\r\n  gender: yup\r\n    .string()\r\n    .oneOf([\"male\", \"female\"], \"Please select either male or female\")\r\n    .required(\"Please select your gender\"),\r\n});\r\nexport default function StudentForm({\r\n  initialValues,\r\n  onbubmit,\r\n  error,\r\n}: StudentFormProps): ReactElement {\r\n  const ListCity = useAppSelector(getListCity);\r\n  const newListCityToSelect: Array<{ value: string; label: string }> = ListCity.map((city) => {\r\n    return { value: city.code, label: city.name };\r\n  });\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm<students>({\r\n    defaultValues: initialValues,\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  return (\r\n    <Box width='40%' margin='auto'>\r\n      <form onSubmit={handleSubmit(onbubmit)}>\r\n        <InputsField name='name' control={control} label='Name' />\r\n\r\n        <InputsField name='age' control={control} label='Age' />\r\n\r\n        <InputsField name='mark' control={control} label='Mark' />\r\n\r\n        <RidioFields\r\n          name='gender'\r\n          control={control}\r\n          label='Gender'\r\n          options={[\r\n            { value: \"male\", label: \"Male\" },\r\n            { value: \"female\", label: \"Female\" },\r\n          ]}\r\n        />\r\n\r\n        <SelectField name='city' control={control} label='City' options={newListCityToSelect} />\r\n\r\n        {error && <Alert severity='error'>Error connect to server </Alert>}\r\n        <Box mt={2}>\r\n          <Button variant='outlined' type='submit'>\r\n            {isSubmitting && <CircularProgress size='small' />}\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import { ListResponse, cities, Params, students } from \"typeData\";\r\nimport axiosClient from \"./axiosClient\";\r\n\r\nconst studentApi = {\r\n  getAll: (params: Params): Promise<ListResponse<students>> => {\r\n    //dinh nghia ham nay tra ve 1 promise se tra ve 1 mang cac cities\r\n    const url = \"/students\";\r\n    return axiosClient.get(url, {\r\n      params: params,\r\n    });\r\n  },\r\n  getbyId: (id: string): Promise<students> => {\r\n    const url = \"/students/\" + id;\r\n    return axiosClient.get(url);\r\n  },\r\n  addStudent: (data: students): Promise<students> => {\r\n    const url = \"/students\";\r\n    return axiosClient.post(url, data);\r\n  },\r\n  updateStudent: (data: students): Promise<students> => {\r\n    const url = `/students/${data.id}`; //\r\n    return axiosClient.patch(url, data);\r\n  },\r\n  removeStudent: (id: string): Promise<any> => {\r\n    const url = \"/students/\" + id;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\nexport default studentApi;\r\n","import { Box, Typography } from \"@material-ui/core\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { students } from \"typeData\";\r\nimport StudentForm from \"./StudentForm\";\r\nimport studentApi from \"api/studentApi\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface Props {}\r\n\r\nexport default function AddStudent({}: Props): ReactElement {\r\n  const { studentId }: any = useParams();\r\n  const [error, setError] = useState<string>(\"\");\r\n  const history = useHistory();\r\n  const [student, setStudent] = useState<students>();\r\n  const isEdit = Boolean(studentId);\r\n  let initialValues: students = {\r\n    name: \"\",\r\n    age: 0,\r\n    mark: 0,\r\n    gender: \"male\",\r\n    city: \"\",\r\n    ...student,\r\n  } as students;\r\n\r\n  //handle submit\r\n  const handleStudentFormSubmit = async (student: students) => {\r\n    console.log(\"submit\", student);\r\n    try {\r\n      if (isEdit) {\r\n        setError(\"\");\r\n        await studentApi.updateStudent(student);\r\n        history.push(`/admin/student`);\r\n      } else {\r\n        setError(\"\");\r\n        await studentApi.addStudent(student);\r\n        history.push(`/admin/student`);\r\n      }\r\n      toast.success(\"Success!\");\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      (async () => {\r\n        try {\r\n          const data: students = await studentApi.getbyId(studentId.slice(1));\r\n          setStudent(data);\r\n          console.log(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })();\r\n    }\r\n  }, [studentId]);\r\n  return (\r\n    <Box>\r\n      <Link to='/admin/student' style={{ textDecoration: \"none\" }}>\r\n        <Typography variant='caption' style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <ChevronLeftIcon /> Back to list student\r\n        </Typography>\r\n      </Link>\r\n      <Typography variant='h5'>{isEdit ? \"Update Student\" : \"Add Student\"}</Typography>\r\n      {/* form  */}\r\n      {/* Co nghia la neu la add thi hien thi gia tri khoi tao luon khong thi la edit se cho no lay gia tri khoi tao xong moi hien thi form  */}\r\n      {(!isEdit || Boolean(student)) && (\r\n        <Box mt={3}>\r\n          <StudentForm\r\n            initialValues={initialValues}\r\n            onbubmit={handleStudentFormSubmit}\r\n            error={error}\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { RootState } from \"./../../app/store\";\r\nimport { ListResponse, PaginationParams } from \"./../../typeData/common\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Params, students } from \"typeData\";\r\n\r\nexport interface StudentState {\r\n  loading: boolean;\r\n  list: students[];\r\n  filter: Params;\r\n  pagination: PaginationParams;\r\n}\r\n\r\nconst initialState: StudentState = {\r\n  loading: false,\r\n  list: [],\r\n  filter: {\r\n    _page: 1,\r\n    _limit: 10,\r\n  },\r\n  pagination: {\r\n    _page: 1,\r\n    _limit: 10,\r\n    _totalRows: 10,\r\n  },\r\n};\r\n\r\nconst StudentSlice = createSlice({\r\n  name: \"student\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    actionFetchListStudent: (state, action: PayloadAction<Params>) => {\r\n      state.loading = true;\r\n    },\r\n    actionFetchListStudentSuccess: (state, action: PayloadAction<ListResponse<students>>) => {\r\n      state.loading = false;\r\n      state.list = action.payload.data;\r\n      state.pagination = action.payload.pagination;\r\n    },\r\n    actionFetchListStudentFail: (state) => {\r\n      state.loading = false;\r\n    },\r\n\r\n    actionSetFilter: (state, action: PayloadAction<Params>) => {\r\n      state.filter = action.payload;\r\n    },\r\n    actionSetFilterDebounce: (state, action: PayloadAction<string>) => {},\r\n    actionSetFilterDebounceSuccess: (state, action: PayloadAction<string>) => {\r\n      state.filter = { ...state.filter, name_like: action.payload, _page: 1 };\r\n    },\r\n  },\r\n});\r\n\r\n//action\r\nexport const {\r\n  actionFetchListStudent,\r\n  actionFetchListStudentSuccess,\r\n  actionFetchListStudentFail,\r\n  actionSetFilter,\r\n  actionSetFilterDebounce,\r\n  actionSetFilterDebounceSuccess,\r\n} = StudentSlice.actions;\r\n//selector\r\nexport const getLoading = (state: RootState) => state.student.loading;\r\nexport const getListStudent = (state: RootState) => state.student.list;\r\nexport const getFilter = (state: RootState) => state.student.filter;\r\nexport const getPagination = (state: RootState) => state.student.pagination;\r\n//reducer\r\nconst StudentReducer = StudentSlice.reducer;\r\nexport default StudentReducer;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Params, students } from \"typeData\";\r\nimport { useAppDispatch } from \"app/hooks\";\r\nimport { actionFetchListStudent } from \"../StudentSlice\";\r\nimport studentApi from \"api/studentApi\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface RemoveDialogProps {\r\n  open: boolean;\r\n  filter: Params;\r\n  currentStudent: students;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport default function RemoveDialog({\r\n  open,\r\n  filter,\r\n  currentStudent,\r\n  handleClose,\r\n}: RemoveDialogProps) {\r\n  const dispatch = useAppDispatch();\r\n  const handleAgree = async () => {\r\n    try {\r\n      await studentApi.removeStudent(currentStudent.id || \"\");\r\n      toast.success(\"Remove successfuly!\");\r\n      handleClose();\r\n      dispatch(actionFetchListStudent(filter));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogTitle id='alert-dialog-title'>{\"Please Confirm\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            Are you sure remove '{currentStudent.name}' from list student?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAgree} color='secondary' autoFocus>\r\n            Agree\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancle\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { FormControl, Input, InputAdornment, InputLabel } from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Params } from \"typeData\";\r\n\r\ninterface SearchBoxProps {\r\n  filter: Params;\r\n  onSearchChange?: (e: any) => void;\r\n}\r\n\r\nexport default function SearchBox({ filter, onSearchChange }: SearchBoxProps): ReactElement {\r\n  return (\r\n    <FormControl fullWidth size='small'>\r\n      <InputLabel htmlFor='standard-adornment-amount'>Enter To Search</InputLabel>\r\n      <Input\r\n        id='standard-adornment-amount'\r\n        // value={values.amount}\r\n        onChange={(e: any) => onSearchChange?.(e)}\r\n        endAdornment={\r\n          <InputAdornment position='end'>\r\n            <SearchIcon />\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n","import {\r\n  createStyles,\r\n  FormControl,\r\n  Theme,\r\n  makeStyles,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { cities, Params } from \"typeData\";\r\n\r\ninterface SelectBoxProps {\r\n  listCity: cities[];\r\n  filter: Params;\r\n  onCityChange?: (e: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  })\r\n);\r\nexport default function SelectBox({\r\n  filter,\r\n  onCityChange,\r\n  listCity,\r\n}: SelectBoxProps): ReactElement {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl variant='outlined' className={classes.formControl} size='small' fullWidth>\r\n      <InputLabel htmlFor='outlined-age-native-simple'>City</InputLabel>\r\n      <Select\r\n        native\r\n        onChange={onCityChange}\r\n        label='City'\r\n        value={filter.city || \"\"}\r\n        inputProps={{\r\n          name: \"age\",\r\n          id: \"outlined-age-native-simple\",\r\n        }}\r\n      >\r\n        <option value='' />\r\n        {listCity.map((city) => (\r\n          <option key={city.code} value={city.code}>\r\n            {city.name}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import {\r\n  createStyles,\r\n  FormControl,\r\n  Theme,\r\n  makeStyles,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { cities, Params } from \"typeData\";\r\n\r\ninterface SelectSortProps {\r\n  filter: Params;\r\n  onSortChange?: (e: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  })\r\n);\r\nexport default function SelectSort({ filter, onSortChange }: SelectSortProps): ReactElement {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl variant='outlined' className={classes.formControl} size='small' fullWidth>\r\n      <InputLabel htmlFor='outlined-age-native-simple'>Sort</InputLabel>\r\n      <Select\r\n        native\r\n        onChange={onSortChange}\r\n        label='Sort'\r\n        value={`${filter._sort}.${filter._order}` || \"\"}\r\n        inputProps={{\r\n          name: \"age\",\r\n          id: \"outlined-age-native-simple\",\r\n        }}\r\n      >\r\n        <option value='' />\r\n        <option value='name.asc'>Name ASC</option>\r\n        <option value='name.desc'>Name DESC</option>\r\n        <option value='mark.asc'>Mark ASC</option>\r\n        <option value='mark.desc'>Mark DESC</option>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { students } from \"typeData\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { getColorMark, getNameCity } from \"utils\";\r\nimport \"../style.css\";\r\nimport { useAppSelector } from \"app/hooks\";\r\nimport { getListCity } from \"features/city/citySlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport interface StudentDataInTableProps {\r\n  studentList: students[];\r\n  handleClickOpen: (student: students) => void;\r\n  handleEdit: (student: students) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  action: {\r\n    display: \"flex\",\r\n  },\r\n  columId: {\r\n    maxWidth: \"270px\",\r\n    height: \"20px\",\r\n    lineHeight: \"20px\",\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nexport default function StudentDataInTable({\r\n  studentList,\r\n  handleClickOpen,\r\n  handleEdit,\r\n}: StudentDataInTableProps) {\r\n  const classes = useStyles();\r\n  const ListCity = useAppSelector(getListCity);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'>#ID</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Gender</TableCell>\r\n            <TableCell>Mark</TableCell>\r\n            <TableCell>City</TableCell>\r\n            <TableCell align='right'>Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {studentList.map((student, index) => (\r\n            <TableRow key={student.id}>\r\n              <TableCell component='th' align='left'>\r\n                <Box className={classes.columId} id='columId'>\r\n                  {student.id}\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell>{student.name}</TableCell>\r\n              <TableCell>{student?.gender.toUpperCase()}</TableCell>\r\n              <TableCell>\r\n                <Box color={getColorMark(student.mark)} fontWeight='bold'>\r\n                  {student.mark}\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell>{getNameCity(student.city, ListCity)}</TableCell>\r\n              <TableCell align='right' className={classes.action}>\r\n                <Button\r\n                  color='secondary'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  onClick={() => handleClickOpen(student)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n                <Button\r\n                  color='primary'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  onClick={() => handleEdit(student)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ninterface StudentTableProps {\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  roots: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\nexport default function StudentTable({ title, children }: StudentTableProps): ReactElement {\r\n  const classes = useStyle();\r\n  return (\r\n    <Paper variant='outlined' className={classes.roots}>\r\n      <Typography variant='h6'>{title}</Typography>\r\n      <Box mt={1}>{children}</Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Box, Button, Fab, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\r\nimport { Loading } from \"component/Common/Loading\";\r\nimport { getListCity } from \"features/city/citySlice\";\r\nimport React, { ChangeEvent, ReactElement, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Params, students } from \"typeData\";\r\nimport RemoveDialog from \"../components/RemoveDialog\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport SelectBox from \"../components/SelectBox\";\r\nimport SelectSort from \"../components/SelectSort\";\r\nimport StudentDataInTable from \"../components/StudentDataInTable\";\r\nimport StudentTable from \"../components/StudentTable\";\r\nimport {\r\n  actionFetchListStudent,\r\n  actionSetFilter,\r\n  actionSetFilterDebounce,\r\n  getFilter,\r\n  getListStudent,\r\n  getLoading,\r\n  getPagination,\r\n} from \"../StudentSlice\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {},\r\n  pagination: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  gridFilter: {\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function ListStudent(): ReactElement {\r\n  const classes = useStyle();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const history = useHistory();\r\n  const loadding = useAppSelector(getLoading);\r\n  const filter = useAppSelector(getFilter);\r\n  const ListStudent = useAppSelector(getListStudent);\r\n  const pagination = useAppSelector(getPagination);\r\n  const ListCity = useAppSelector(getListCity);\r\n  const [page, setPage] = React.useState(1);\r\n  //state remove dialog\r\n  const [selectedStudent, setSelectedStudent]: [students, any] = useState({\r\n    name: \"\",\r\n    age: 0,\r\n    mark: 0,\r\n    gender: \"male\",\r\n    city: \"hn\",\r\n  });\r\n  // const student: students = { name: \"\", age: 0, mark: 0, gender: \"male\", city: \"hn\" };\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (student: students): void => {\r\n    setSelectedStudent(student);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  //\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n    dispatch(actionSetFilter({ ...filter, _page: value }));\r\n  };\r\n  const onSearchChange = (e: any) => {\r\n    dispatch(actionSetFilterDebounce(e.target.value));\r\n  };\r\n  const onCityChange = (e: any) => {\r\n    const newFilter: Params = {\r\n      ...filter,\r\n      _page: 1,\r\n      city: e.target.value || undefined,\r\n    };\r\n    dispatch(actionSetFilter(newFilter));\r\n  };\r\n  const onSortChange = (e: any) => {\r\n    const [_sort, _order] = e.target.value.split(\".\");\r\n    const newFilter: Params = {\r\n      ...filter,\r\n      _sort: _sort || undefined,\r\n      _order: _order || undefined,\r\n    };\r\n\r\n    dispatch(actionSetFilter(newFilter));\r\n  };\r\n  const onClickClear = () => {\r\n    const newFilter: Params = {\r\n      _page: 1,\r\n      _limit: 10,\r\n      _sort: undefined,\r\n      _order: undefined,\r\n      city: undefined,\r\n      name_like: undefined,\r\n    };\r\n    dispatch(actionSetFilter(newFilter));\r\n  };\r\n\r\n  const handleEdit = (student: students): void => {\r\n    history.push(`${url}/edit:${student.id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(actionFetchListStudent(filter));\r\n  }, [dispatch, filter]);\r\n\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <Box>\r\n        {loadding && <Loading />}\r\n        <Box id='title-list' display='flex' justifyContent='space-between' overflow='hidden'>\r\n          <Typography variant='h5'>Student List</Typography>\r\n          <Link to={`${url}/add`} style={{ textDecoration: \"none\" }}>\r\n            <Fab color='primary' aria-label='add' variant='extended' size='small'>\r\n              <AddIcon /> Add Student\r\n            </Fab>\r\n          </Link>\r\n        </Box>\r\n        {/* filter  */}\r\n        <Box>\r\n          <Grid container spacing={2} className={classes.gridFilter}>\r\n            <Grid item xs={12} md={6}>\r\n              <SearchBox filter={filter} onSearchChange={onSearchChange} />\r\n            </Grid>\r\n            {/* select  */}\r\n            <Grid item xs={12} md={3}>\r\n              <SelectBox onCityChange={onCityChange} filter={filter} listCity={ListCity} />\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <SelectSort filter={filter} onSortChange={onSortChange} />\r\n            </Grid>\r\n            <Grid item xs={4} md={1}>\r\n              <Button variant='outlined' color='primary' size='small' onClick={onClickClear}>\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        {/* table  */}\r\n        <Box mt={2}>\r\n          <StudentTable title=''>\r\n            <StudentDataInTable\r\n              studentList={ListStudent}\r\n              handleClickOpen={handleClickOpen}\r\n              handleEdit={handleEdit}\r\n            />\r\n          </StudentTable>\r\n        </Box>\r\n        <Pagination\r\n          count={Math.ceil(pagination._totalRows / pagination._limit)}\r\n          color='primary'\r\n          size='large'\r\n          variant='outlined'\r\n          className={classes.pagination}\r\n          shape='rounded'\r\n          page={page}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n      <RemoveDialog\r\n        filter={filter}\r\n        open={open}\r\n        currentStudent={selectedStudent}\r\n        handleClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useAppDispatch } from \"app/hooks\";\r\nimport { actionFetchDataCity } from \"features/city/citySlice\";\r\nimport React, { ReactElement, useEffect } from \"react\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport AddStudent from \"./pages/AddStudent\";\r\nimport ListStudent from \"./pages/ListStudent\";\r\n\r\nexport default function Student(): ReactElement {\r\n  const { url } = useRouteMatch();\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(actionFetchDataCity());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${url}/add`}>\r\n        <AddStudent />\r\n      </Route>\r\n      <Route path={`${url}/edit:studentId`}>\r\n        <AddStudent />\r\n      </Route>\r\n      <Route path={`${url}`}>\r\n        <ListStudent />\r\n      </Route>\r\n      <Route path={`*`}>Not Found</Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport Header from \"component/Common/Header\";\r\nimport SideBar from \"component/Common/SideBar\";\r\nimport DashBoard from \"features/dashboard\";\r\nimport Student from \"features/student\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport interface AdminLayoutProps {}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"25% 1fr\",\r\n    gridTemplateRows: \"auto 1fr\",\r\n    gridTemplateAreas: '\"header header\" \"sidebar main\"',\r\n    minHeight: \"100vh\",\r\n  },\r\n  box1: { gridArea: \"header\" },\r\n  box2: {\r\n    gridArea: \"sidebar\",\r\n    border: `1px solid ${theme.palette.primary.dark}`,\r\n    overflow: \"hidden\",\r\n  },\r\n  box3: { gridArea: \"main\", padding: theme.spacing(1) },\r\n}));\r\nexport function AdminLayout(props: AdminLayoutProps): ReactElement {\r\n  const { url } = useRouteMatch();\r\n  const classes = useStyle();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.box1}>\r\n        <Header />\r\n      </Box>\r\n      <Box className={classes.box2}>\r\n        <SideBar />\r\n      </Box>\r\n      <Box className={classes.box3}>\r\n        <Switch>\r\n          <Route path={`${url}/dashboard`} component={DashBoard} />\r\n          <Route path={`${url}/student`} component={Student} />\r\n          <Route path={`${url}`}>\r\n            <Redirect to={`${url}/dashboard`} />\r\n          </Route>\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, CircularProgress, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authSelector, login } from \"../authSlice\";\r\n\r\ninterface LoginPageProps {}\r\n\r\nconst useStyle = makeStyles((theme) => {\r\n  return {\r\n    root: {},\r\n    box: {\r\n      width: theme.spacing(50),\r\n      textAlign: \"center\",\r\n      padding: \"30px\",\r\n    },\r\n  };\r\n});\r\n\r\nconst LoginPage = (props: LoginPageProps) => {\r\n  const classes = useStyle();\r\n  const dispatch = useAppDispatch();\r\n  const { logging } = useAppSelector(authSelector);\r\n  const history = useHistory();\r\n  const isSignIn = Boolean(localStorage.getItem(\"access_token\"));\r\n\r\n  if (isSignIn) {\r\n    history.push(`/admin`);\r\n  }\r\n\r\n  //\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyD5zTIY2xw9KA2_BBrWB5vLFE4xQSRF9rk\",\r\n    authDomain: \"test-393e4.firebaseapp.com\",\r\n    projectId: \"test-393e4\",\r\n    storageBucket: \"test-393e4.appspot.com\",\r\n    messagingSenderId: \"33265717266\",\r\n    appId: \"1:33265717266:web:f7cd942483592fc3f448cb\",\r\n    measurementId: \"G-9Y43FFNL6P\",\r\n  };\r\n  // Initialize Firebase\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  }\r\n  // Configure FirebaseUI.\r\n  const uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: \"/admin\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(login({ username: user?.displayName as string, password: \"ok\" }));\r\n        console.log(user);\r\n      }\r\n    });\r\n    return () => unregisterAuthObserver();\r\n  }, []);\r\n  return (\r\n    <Box display='flex' justifyContent='center' alignItems='center' minHeight='100vh'>\r\n      <Paper elevation={3} className={classes.box}>\r\n        <Typography variant='h5' component='h1'>\r\n          Student Login\r\n        </Typography>\r\n        <Box mt={2}>\r\n          {/* <Button variant='contained' color='primary' fullWidth onClick={handleLoginClick}>\r\n            {logging && <CircularProgress color='secondary' size={20} />}\r\n            &nbsp; Fake Login\r\n          </Button> */}\r\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import citysApi from \"api/citysApi\";\nimport { PrivateRoute } from \"component/Common\";\nimport { AdminLayout } from \"component/Layout\";\nimport LoginPage from \"features/auth/pages/LoginPage\";\nimport React, { useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  useEffect(() => {\n    let cities = citysApi\n      .getAll()\n      .then((data) => {\n        // console.log(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n  return (\n    <>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <PrivateRoute path=\"/admin\" component={AdminLayout} />\n        <Route path=\"*\">{<Redirect to=\"/login\" />}</Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../../app/store\";\nimport { fetchCount } from \"./counterAPI\";\n\nexport interface CounterState {\n  value: number;\n  status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  \"counter/fetchCount\",\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n    //saga\n    incrementSaga: (state, action: PayloadAction<number>) => {\n      state.status = \"loading\";\n    },\n    incrementSagaSuccess: (state, action: PayloadAction<number>) => {\n      state.status = \"idle\";\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  incrementSaga,\n  incrementSagaSuccess,\n} = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd =\n  (amount: number): AppThunk =>\n  (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n      dispatch(incrementByAmount(amount));\n    }\n  };\n\nexport default counterSlice.reducer;\n","import { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { push } from \"connected-react-router\";\r\nimport { call, delay, fork, put, take } from \"redux-saga/effects\";\r\nimport { login, LoginPayload, loginSuccess, logout } from \"./authSlice\";\r\n\r\nfunction* handleLogin(payload: LoginPayload) {\r\n  yield delay(1000);\r\n  //handle login thanh cong\r\n  localStorage.setItem(\"access_token\", \"Ok\");\r\n  yield put(loginSuccess({ id: \"2\", name: \"tuananh\" }));\r\n\r\n  //redirect\r\n  yield put(push(\"/admin/dashboard\"));\r\n}\r\nfunction* handleLogout() {\r\n  yield delay(1000);\r\n\r\n  localStorage.removeItem(\"access_token\");\r\n  //redirect\r\n  yield put(push(\"/admin\"));\r\n}\r\nfunction* watchLoginFlow() {\r\n  while (true) {\r\n    const isLogin = Boolean(localStorage.getItem(\"access_token\"));\r\n    if (!isLogin) {\r\n      //neu chua dang nhap thi se thuc hien duoc dang nhap con khong thi khongf\r\n      const action: PayloadAction<LoginPayload> = yield take(login.type);\r\n      yield fork(handleLogin, action.payload);\r\n    }\r\n\r\n    yield take(logout.type);\r\n    yield call(handleLogout); //call hay fork cung duoc nhung call la blocking call\r\n  }\r\n}\r\n\r\nexport function* authSaga() {\r\n  yield fork(watchLoginFlow);\r\n}\r\n","import citysApi from \"api/citysApi\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { cities, ListResponse } from \"typeData\";\r\nimport {\r\n  actionFetchDataCity,\r\n  actionFetchDataCityFail,\r\n  actionFetchDataCitySuccess,\r\n} from \"./citySlice\";\r\n\r\nfunction* fetchDataCity() {\r\n  try {\r\n    const response: ListResponse<cities> = yield call(citysApi.getAll);\r\n    yield put(actionFetchDataCitySuccess(response));\r\n  } catch (error) {\r\n    console.log(\"day la loi\", error);\r\n    yield put(actionFetchDataCityFail);\r\n  }\r\n}\r\n\r\nexport default function* citySaga() {\r\n  yield takeLatest(actionFetchDataCity.type, fetchDataCity);\r\n}\r\n","import citysApi from \"api/citysApi\";\r\nimport { cities, students } from \"typeData\";\r\nimport { ListResponse } from \"typeData\";\r\nimport studentApi from \"api/studentApi\";\r\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  actionFetchData,\r\n  actionFetchDataFail,\r\n  actionSeLowestStudentt,\r\n  actionSetHighestStudent,\r\n  actionSetRankingByCityList,\r\n  actionSetStatistics,\r\n  RankingByCity,\r\n} from \"./dashboardSlice\";\r\n\r\nfunction* setStatistics() {\r\n  const arrData: Array<ListResponse<students>> = yield all([\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: \"male\" }),\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: \"female\" }),\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_gte: 8 }), //lay nhung htang lown hon 8\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_lte: 5 }),\r\n  ]);\r\n  const staticsData = arrData.map((x) => x.pagination._totalRows);\r\n  const [maleCount, femaleCount, hightMarkCount, lowMarkCount] = staticsData;\r\n  yield put(\r\n    actionSetStatistics({\r\n      maleCount,\r\n      femaleCount,\r\n      hightMarkCount,\r\n      lowMarkCount,\r\n    })\r\n  );\r\n}\r\nfunction* highestStudent() {\r\n  const { data }: ListResponse<students> = yield call(studentApi.getAll, {\r\n    _page: 1,\r\n    _limit: 5,\r\n    _sort: \"mark\",\r\n    _order: \"desc\",\r\n  });\r\n\r\n  yield put(actionSetHighestStudent(data));\r\n}\r\nfunction* lowestStudent() {\r\n  const { data }: ListResponse<students> = yield call(studentApi.getAll, {\r\n    _page: 1,\r\n    _limit: 5,\r\n    _sort: \"mark\",\r\n    _order: \"asc\",\r\n  });\r\n\r\n  yield put(actionSeLowestStudentt(data));\r\n}\r\nfunction* rankingByCity() {\r\n  const { data: citiesList }: ListResponse<cities> = yield call(citysApi.getAll);\r\n  const { data: studentsList }: ListResponse<students> = yield call(studentApi.getAll, {\r\n    _page: 1,\r\n    _limit: 1000,\r\n  });\r\n\r\n  const arrStudentIncity: Array<RankingByCity> = [];\r\n  citiesList.forEach((city) => {\r\n    let ArrStudentIncity = studentsList.filter((student) => {\r\n      return student.city === city.code;\r\n    });\r\n    ArrStudentIncity = ArrStudentIncity.slice(0, 5).sort((a, b) => b.mark - a.mark);\r\n\r\n    const EditData = { cityId: city.code, ListStudent: ArrStudentIncity };\r\n    arrStudentIncity.push(EditData);\r\n  });\r\n  yield put(actionSetRankingByCityList(arrStudentIncity));\r\n}\r\n\r\nfunction* fetchData() {\r\n  try {\r\n    yield all([\r\n      call(setStatistics),\r\n      call(highestStudent),\r\n      call(lowestStudent),\r\n      call(rankingByCity),\r\n    ]);\r\n    yield put(actionFetchDataFail());\r\n  } catch (error) {\r\n    yield put(actionFetchDataFail());\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default function* dashboardSaga() {\r\n  console.log(\"Ok\");\r\n\r\n  yield takeLatest(actionFetchData.type, fetchData);\r\n}\r\n","import studentApi from \"api/studentApi\";\r\nimport { ListResponse, Params, students } from \"typeData\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { call, debounce, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  actionFetchListStudent,\r\n  actionFetchListStudentFail,\r\n  actionFetchListStudentSuccess,\r\n  actionSetFilterDebounce,\r\n  actionSetFilterDebounceSuccess,\r\n} from \"./StudentSlice\";\r\n\r\nfunction* fetchData(action: PayloadAction<Params>) {\r\n  try {\r\n    const response: ListResponse<students> = yield call(studentApi.getAll, action.payload);\r\n    yield put(actionFetchListStudentSuccess(response));\r\n  } catch (error) {\r\n    console.log(\"loi cua ban la\", error);\r\n    yield put(actionFetchListStudentFail());\r\n  }\r\n}\r\nfunction* fetchDataSearchDebounce(action: PayloadAction<string>) {\r\n  console.log(\"Debounce data\", action.payload);\r\n  yield put(actionSetFilterDebounceSuccess(action.payload));\r\n}\r\n\r\nexport default function* studentSaga() {\r\n  yield takeLatest(actionFetchListStudent.type, fetchData);\r\n  yield debounce(1000, actionSetFilterDebounce.type, fetchDataSearchDebounce);\r\n}\r\n","import { authSaga } from \"features/auth/authSaga\";\r\nimport citySaga from \"features/city/citySaga\";\r\nimport dashboardSaga from \"features/dashboard/dashboardSaga\";\r\nimport studentSaga from \"features/student/StudentSaga\";\r\nimport { all } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSaga(), dashboardSaga(), studentSaga(), citySaga()]);\r\n}\r\n","import { configureStore, ThunkAction, Action, combineReducers } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport creatSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./rootSaga\";\nimport authReducer from \"features/auth/authSlice\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport dashboardReducer from \"features/dashboard/dashboardSlice\";\nimport StudentReducer from \"features/student/StudentSlice\";\nimport cityReducer from \"features/city/citySlice\";\n\nconst sagaMiddleware = creatSagaMiddleware();\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: counterReducer,\n  auth: authReducer,\n  dashboard: dashboardReducer,\n  student: StudentReducer,\n  city: cityReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      //day la cac middleware default khong truyen vao thi la mac dinh\n      thunk: true,\n      immutableCheck: true, //kiem tra xem state duoc mutet\n      serializableCheck: true, //la chi cho state nhan vao gia tri khong nhan vao function promise,symbol\n    }).concat(sagaMiddleware, routerMiddleware(history)),\n  devTools: true,\n});\n//phai run saga\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport App from \"./App\";\nimport { history, store } from \"./app/store\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline />\n        <App />\n      </ConnectedRouter>\n\n      <ToastContainer\n        position='top-right'\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}